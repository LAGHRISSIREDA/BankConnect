package com.codesigne.security;


import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.HttpMethod;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.codesigne.services.UserService;

import lombok.AllArgsConstructor;




@Configuration
@AllArgsConstructor
@EnableWebSecurity
public class WebSecurityConfig {
   private final BCryptPasswordEncoder bCryptPasswordEncoder;
   private final UserService userService;

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
                .csrf().disable()
                .authorizeHttpRequests()
                .requestMatchers(HttpMethod.POST,"/users")
                .permitAll()
                .anyRequest().authenticated()
                .and()
                .formLogin();
        return http.build();
    }
    
    
    public void configure(AuthenticationManagerBuilder auth) {
    	auth.authenticationProvider(null)
    }
    
    
    public DaoAuthenticationProvider daoAuthenticationProvider() {
    	DaoAuthenticationProvider provider = new DaoAuthenticationProvider();
    	
    }


}